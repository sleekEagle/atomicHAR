gpu_index: 0
data:
  dataset: opp
  wandb: False
  wandb_name: atomicHAR
  normalize: False

train:
  use_CL: True
  lmd: 1.0
  BN_momentum: 0.1

model:
  save_path: D:\models\HAR\
  epochs: 100
  atoms:
    use_atoms: False
    one_atm_per_time: False #only one atom per time step
    num_indices: 2  #number of max indices to use per sequence
    #the sequence length = num_indices * num_atoms (i.e the number of filters in the last cnn layer)
    atm_occur: 4 # how many instances of the same atom are allowed to occur in the same sequence
  hide_frac: 0 #max fraction of atoms to hide each time
  residual: False
  feature_ext:
    layers: [[[64,2,1],[64,2,1]],[[64,2,1],[64,2,1]]]
    dropout: [0,0,0]
    bn: [1,1,1]
    mp: [[2,1],[2,1],[2,1]]
  seq_model:
    type: "cnn"
    cnn: 
      emb: [64,1,1]
      cls: [-1,1,1]

FSL_test:
  run_test: False
  type: regular #regular: normal FSL testing kldiv: plot feature dist and kl divergence
  layer: emb_bn
  finetune: BN #other: no ab fine tuning or BN: batch norm finetuning
  n_shots: 5
  dataset: [opp]
  test_eval: False
  n_iter: 200
  out_dir: FSL_out
  BN_momentum: 0.0
  reg_k: 0.0
  center_k: 1
  inter_k: 1

utdmhad:
  path: C:\\Users\\lahir\\data\\UTD_MHAD\\
  imu_seg: True
  train:
    bs: 32
    actions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
    subjects: [1, 2, 3, 4, 5,6, 7]
  test:
    bs: 1
    actions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
    subjects: [8]
  model:
    transformer: 
      d_model: 4
      num_layers: 1
      n_head: 4
      dropout: 0.2
      dim_feedforward: 64
      d_out: 32
    cnn:
      in_channels: 6
      #imu_feat_dim must be divisible by 4
      imu_feat_dim: 32
      atom_emb_dim: 16
    forcast:
      hidden_dim: 20
opp:
  path: D:\data\opportunity+activity+recognition\OpportunityUCIDataset\
  split: split4
  split1:
    source_ac: ["Open Door 2","Close Door 2","Close Fridge","Close Dishwasher","Close Drawer 1",
                 "Close Drawer 2","Close Drawer 3","Clean Table","Drink from Cup","Toggle Switch"]
    target_ac: ["Open Door 1","Close Door 1","Open Fridge","Open Dishwasher","Open Drawer 1",
                  "Open Drawer 2","Open Drawer 3"]
  split2:
    source_ac: ["Close Door 2","Close Drawer 1","Close Drawer 2","Close Drawer 3",
                "Close Door 1","Open Drawer 1", "Open Drawer 2","Open Door 2","Open Door 1","Open Drawer 3"]
    target_ac: ["Close Dishwasher","Close Fridge","Open Fridge","Drink from Cup","Open Dishwasher","Clean Table","Toggle Switch"]
  split3:
    source_ac: ["Close Dishwasher","Close Fridge","Open Fridge","Drink from Cup","Open Dishwasher","Clean Table","Toggle Switch",
                "Open Door 1", "Close Door 1","Open Drawer 1","Close Drawer 1"]
    target_ac: ["Close Door 2","Close Drawer 2","Close Drawer 3","Open Drawer 2","Open Door 2","Open Drawer 3"]
  split4:
    source_ac: ["Close Door 2","Close Fridge","Close Dishwasher","Close Drawer 1","Close Door 1",
                 "Close Drawer 2","Close Drawer 3","Clean Table","Drink from Cup","Toggle Switch"]
    target_ac: ["Open Door 2","Open Door 1","Open Fridge","Open Dishwasher","Open Drawer 1","Open Drawer 2","Open Drawer 3"]

  source_subj: [1]
  target_subj: [1]
  in_channels: 77
  sr: 30
  window_len_s: 1
  overlap: 0.5
  train_bs: 32
  split_ratio: 0.8
  normalize: True
pamap2:
  path: C:\\Users\\lahir\\data\\pamap2+physical+activity+monitoring\\PAMAP2_Dataset\\PAMAP2_Dataset\\
  data_types: ['Protocol']
  normalize: True
  split_ratio: 0.8 #train:test split. Only appicable when there is an overlap between train and test subjects
  group1: [101,102,103]
  group2: [104,105,106]
  group3: [107,108,109]
  source_ac: [1,3,4,5,12,16,24]
  train_subj: [group1,group3]
  test_subj: [group2]
  in_channels: 36
  required_columns: ['time_stamp','activity_id',
              'hand_3D_acceleration_16_x','hand_3D_acceleration_16_y','hand_3D_acceleration_16_z',
              'hand_3D_gyroscope_x','hand_3D_gyroscope_y','hand_3D_gyroscope_z',
              'hand_4D_orientation_x','hand_4D_orientation_y','hand_4D_orientation_z','hand_4D_orientation_w',
              'chest_3D_acceleration_16_x','chest_3D_acceleration_16_y','chest_3D_acceleration_16_z',
              'chest_3D_gyroscope_x','chest_3D_gyroscope_y','chest_3D_gyroscope_z',
              'chest_3D_magnetometer_x','chest_3D_magnetometer_y','chest_3D_magnetometer_z',
              'chest_4D_orientation_x','chest_4D_orientation_y','chest_4D_orientation_z','chest_4D_orientation_w',
              'ankle_3D_acceleration_16_x','ankle_3D_acceleration_16_y','ankle_3D_acceleration_16_z',
              'ankle_3D_gyroscope_x','ankle_3D_gyroscope_y','ankle_3D_gyroscope_z',
              'ankle_3D_magnetometer_x','ankle_3D_magnetometer_y','ankle_3D_magnetometer_z',
              'ankle_4D_orientation_x','ankle_4D_orientation_y','ankle_4D_orientation_z','ankle_4D_orientation_w']
  FSL:
    test_subj: [group2]
    test_ac: [2,6,7,13,17]
    inv_overlap: 1 #(1-overlap) between the windows. i.e 1 for no overlap, 0.5 for 50% overlap
    n_shot: 5
  train_bs: 32
  test_bs: 32
  window_len_s: 1
  inv_overlap: 0.5
  sample_freq: 100
  model:
    BLSTM:
      hidden_size: 256
      num_layers: 1
      dense: 64
    transformer: 
      d_model: 64
      num_layers: 1
      n_head: 4
      dropout: 0.2
      dim_feedforward: 64
      d_out: 32
    seq_CNN:
      kernel_size: 3
      stride: 1
      channels1: 32
    cnn:
      in_channels: 36
      channels1: 64
      dropout: [1,1,0]
      channels2: 32
      kernel_size1: 3
      kernel_size2: 7
      kernel_size3: 11
      num_cls_features: 128
      #imu_feat_dim must be divisible by 4
      imu_feat_dim: 32
      atom_emb_dim: 16
      num_atoms: 64
    forcast:
      hidden_dim: 20
EMS:
  path: D:\\CPR_extracted
  sample_freq: 100
  window_len_s: 1
  bs: 32


